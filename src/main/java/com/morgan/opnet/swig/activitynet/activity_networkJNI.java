/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.morgan.opnet.swig.activitynet;

public class activity_networkJNI {
  public final static native long new_ActivityNetwork__SWIG_0();
  public final static native long new_ActivityNetwork__SWIG_1(long jarg1);
  public final static native void ActivityNetwork_setInputFile(long jarg1, ActivityNetwork jarg1_, long jarg2);
  public final static native void ActivityNetwork_setDurations(long jarg1, ActivityNetwork jarg1_, long jarg2);
  public final static native boolean ActivityNetwork_readGPR_cons__SWIG_0(long jarg1, ActivityNetwork jarg1_);
  public final static native boolean ActivityNetwork_readGPR_cons__SWIG_1(long jarg1, ActivityNetwork jarg1_, long jarg2);
  public final static native boolean ActivityNetwork_readGPR_bounds__SWIG_0(long jarg1, ActivityNetwork jarg1_);
  public final static native boolean ActivityNetwork_readGPR_bounds__SWIG_1(long jarg1, ActivityNetwork jarg1_, long jarg2);
  public final static native boolean ActivityNetwork_readGPR_beta__SWIG_0(long jarg1, ActivityNetwork jarg1_);
  public final static native boolean ActivityNetwork_readGPR_beta__SWIG_1(long jarg1, ActivityNetwork jarg1_, long jarg2);
  public final static native void ActivityNetwork_readGPR_all(long jarg1, ActivityNetwork jarg1_);
  public final static native void ActivityNetwork_clearEarlyAndLateStarts(long jarg1, ActivityNetwork jarg1_, long jarg2, long jarg3);
  public final static native void ActivityNetwork_clearArcMap__SWIG_0(long jarg1, ActivityNetwork jarg1_, long jarg2);
  public final static native void ActivityNetwork_clearArcMap__SWIG_1(long jarg1, ActivityNetwork jarg1_, long jarg2);
  public final static native void ActivityNetwork_clearArcMap__SWIG_2(long jarg1, ActivityNetwork jarg1_, long jarg2);
  public final static native void ActivityNetwork_clearNodeMap__SWIG_0(long jarg1, ActivityNetwork jarg1_, long jarg2);
  public final static native void ActivityNetwork_clearNodeMap__SWIG_1(long jarg1, ActivityNetwork jarg1_, long jarg2);
  public final static native void ActivityNetwork_clearNodeMap__SWIG_2(long jarg1, ActivityNetwork jarg1_, long jarg2);
  public final static native void ActivityNetwork_displayCriticalSubgraph(long jarg1, ActivityNetwork jarg1_, long jarg2, long jarg3);
  public final static native long ActivityNetwork_writeCriticalSubgraph(long jarg1, ActivityNetwork jarg1_, long jarg2, long jarg3);
  public final static native void ActivityNetwork_runGPR_TCTO_Flow(long jarg1, ActivityNetwork jarg1_, String jarg2, String jarg3);
  public final static native void ActivityNetwork_runGPR_TCTO_LP__SWIG_0(long jarg1, ActivityNetwork jarg1_, int jarg2);
  public final static native boolean ActivityNetwork_runGPR_TCTO_LP__SWIG_1(long jarg1, ActivityNetwork jarg1_, int jarg2, long jarg3);
  public final static native void ActivityNetwork_runMinExpectedCost(long jarg1, ActivityNetwork jarg1_);
  public final static native boolean ActivityNetwork_writeSolution(long jarg1, ActivityNetwork jarg1_, long jarg2, int jarg3, String jarg4, boolean jarg5);
  public final static native void ActivityNetwork_displayGraphData(long jarg1, ActivityNetwork jarg1_);
  public final static native boolean ActivityNetwork_isCritical(long jarg1, ActivityNetwork jarg1_, int jarg2);
  public final static native double ActivityNetwork_duration(long jarg1, ActivityNetwork jarg1_, int jarg2);
  public final static native int ActivityNetwork_totalFloat(long jarg1, ActivityNetwork jarg1_, int jarg2);
  public final static native int ActivityNetwork_earlyStart(long jarg1, ActivityNetwork jarg1_, int jarg2);
  public final static native int ActivityNetwork_lateStart(long jarg1, ActivityNetwork jarg1_, int jarg2);
  public final static native long ActivityNetwork_getNetwork(long jarg1, ActivityNetwork jarg1_);
  public final static native long ActivityNetwork_getDurations(long jarg1, ActivityNetwork jarg1_);
  public final static native long ActivityNetwork_getCritical(long jarg1, ActivityNetwork jarg1_);
  public final static native long ActivityNetwork_getEarlyStart(long jarg1, ActivityNetwork jarg1_);
  public final static native long ActivityNetwork_getLateStart(long jarg1, ActivityNetwork jarg1_);
  public final static native int ActivityNetwork_getMakespan(long jarg1, ActivityNetwork jarg1_);
  public final static native boolean ActivityNetwork_isNetworkEmpty(long jarg1, ActivityNetwork jarg1_);
  public final static native long ActivityNetwork_getTotalFloat(long jarg1, ActivityNetwork jarg1_);
  public final static native void ActivityNetwork_setWriteToFile(long jarg1, ActivityNetwork jarg1_, boolean jarg2);
  public final static native boolean ActivityNetwork_isWriteToFile(long jarg1, ActivityNetwork jarg1_);
  public final static native void delete_ActivityNetwork(long jarg1);
  public final static native double DBLMAX_get();
  public final static native double INTMAX_get();
  public final static native void arcData_id_set(long jarg1, arcData jarg1_, int jarg2);
  public final static native int arcData_id_get(long jarg1, arcData jarg1_);
  public final static native void arcData_type_set(long jarg1, arcData jarg1_, int jarg2);
  public final static native int arcData_type_get(long jarg1, arcData jarg1_);
  public final static native void arcData_gpr_set(long jarg1, arcData jarg1_, int jarg2);
  public final static native int arcData_gpr_get(long jarg1, arcData jarg1_);
  public final static native void arcData_name_set(long jarg1, arcData jarg1_, long jarg2);
  public final static native long arcData_name_get(long jarg1, arcData jarg1_);
  public final static native void arcData_durations_set(long jarg1, arcData jarg1_, long jarg2);
  public final static native long arcData_durations_get(long jarg1, arcData jarg1_);
  public final static native void arcData_currentDuration_set(long jarg1, arcData jarg1_, double jarg2);
  public final static native double arcData_currentDuration_get(long jarg1, arcData jarg1_);
  public final static native void arcData_currentInterval_set(long jarg1, arcData jarg1_, int jarg2);
  public final static native int arcData_currentInterval_get(long jarg1, arcData jarg1_);
  public final static native void arcData_costRates_set(long jarg1, arcData jarg1_, long jarg2);
  public final static native long arcData_costRates_get(long jarg1, arcData jarg1_);
  public final static native void arcData_currentCostRate_set(long jarg1, arcData jarg1_, double jarg2);
  public final static native double arcData_currentCostRate_get(long jarg1, arcData jarg1_);
  public final static native void arcData_costBreakPoints_set(long jarg1, arcData jarg1_, long jarg2);
  public final static native long arcData_costBreakPoints_get(long jarg1, arcData jarg1_);
  public final static native void arcData_critical_set(long jarg1, arcData jarg1_, boolean jarg2);
  public final static native boolean arcData_critical_get(long jarg1, arcData jarg1_);
  public final static native void arcData_totalFloat_set(long jarg1, arcData jarg1_, double jarg2);
  public final static native double arcData_totalFloat_get(long jarg1, arcData jarg1_);
  public final static native void arcData_flow_set(long jarg1, arcData jarg1_, double jarg2);
  public final static native double arcData_flow_get(long jarg1, arcData jarg1_);
  public final static native void arcData_gprActivityA_set(long jarg1, arcData jarg1_, int jarg2);
  public final static native int arcData_gprActivityA_get(long jarg1, arcData jarg1_);
  public final static native void arcData_gprActivityB_set(long jarg1, arcData jarg1_, int jarg2);
  public final static native int arcData_gprActivityB_get(long jarg1, arcData jarg1_);
  public final static native void arcData_gprDelta_set(long jarg1, arcData jarg1_, double jarg2);
  public final static native double arcData_gprDelta_get(long jarg1, arcData jarg1_);
  public final static native void arcData_totalIntervals_set(long jarg1, arcData jarg1_, int jarg2);
  public final static native int arcData_totalIntervals_get(long jarg1, arcData jarg1_);
  public final static native long new_arcData();
  public final static native void delete_arcData(long jarg1);
  public final static native void nodeData_id_set(long jarg1, nodeData jarg1_, int jarg2);
  public final static native int nodeData_id_get(long jarg1, nodeData jarg1_);
  public final static native void nodeData_name_set(long jarg1, nodeData jarg1_, long jarg2);
  public final static native long nodeData_name_get(long jarg1, nodeData jarg1_);
  public final static native void nodeData_earlyStart_set(long jarg1, nodeData jarg1_, double jarg2);
  public final static native double nodeData_earlyStart_get(long jarg1, nodeData jarg1_);
  public final static native void nodeData_lateStart_set(long jarg1, nodeData jarg1_, double jarg2);
  public final static native double nodeData_lateStart_get(long jarg1, nodeData jarg1_);
  public final static native void nodeData_nodeSlack_set(long jarg1, nodeData jarg1_, double jarg2);
  public final static native double nodeData_nodeSlack_get(long jarg1, nodeData jarg1_);
  public final static native long new_nodeData();
  public final static native void delete_nodeData(long jarg1);
  public final static native int arcLookup(long jarg1, int jarg2, int jarg3, long jarg4);
  public final static native int nodeLookup(long jarg1, int jarg2, long jarg3);
  public final static native void outputArcData(long jarg1, long jarg2, int jarg3);
  public final static native long writeArcData(long jarg1, long jarg2);
  public final static native void displayArcData__SWIG_0(long jarg1, long jarg2);
  public final static native void displayArcData__SWIG_1(long jarg1, long jarg2);
  public final static native void displayArcData__SWIG_2(long jarg1, long jarg2);
  public final static native void displayArcData__SWIG_3(long jarg1, long jarg2);
  public final static native void displayArcData__SWIG_4(long jarg1, long jarg2);
  public final static native void displayArcData__SWIG_5(long jarg1, long jarg2);
  public final static native long writeNodeData(long jarg1, long jarg2);
  public final static native void outputNodeData(long jarg1, long jarg2, int jarg3);
  public final static native void displayNodeData__SWIG_0(long jarg1, long jarg2);
  public final static native void displayNodeData__SWIG_1(long jarg1, long jarg2);
  public final static native void displayNodeData__SWIG_2(long jarg1, long jarg2);
  public final static native void displayNodeData__SWIG_3(long jarg1, long jarg2);
  public final static native void digraphCopy(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void reverseArcs(long jarg1);
  public final static native long IntToString(int jarg1);
  public final static native void armArrayToCpp(long jarg1, long jarg2);
  public final static native boolean printSolution(long jarg1);
  public final static native double randTriangular(double jarg1, double jarg2, double jarg3);
  public final static native void replaceAll(long jarg1, long jarg2, long jarg3);
}
